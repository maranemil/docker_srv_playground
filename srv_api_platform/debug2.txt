
################################################
mimeType file validation
################################################

https://github.com/dustin10/VichUploaderBundle/issues/90
https://smaine-milianni.medium.com/my-journey-with-the-symfony-mime-type-guesser-28da04213b33
https://stackoverflow.com/questions/12087738/file-upload-how-to-exclude-a-mime-type-using-asserts
https://stackoverflow.com/questions/56554237/how-to-use-assert-file-and-assert-image-at-the-same-time-in-symfony
https://symfony.com/doc/current/reference/constraints/File.html
https://symfony.com/doc/current/validation/custom_constraint.html
https://symfony2-document.readthedocs.io/en/latest/reference/constraints/File.html
https://symfonycasts.com/screencast/symfony-uploads/validation

---

use Symfony\Component\Validator\Constraints as Assert;

/**
* @Assert\File(
* maxSize="1M",
* mimeTypes={"image/png", "image/jpeg", "image/pjpeg"}
*/

---

// src/Entity/Author.php
namespace App\Entity;
use Symfony\Component\Validator\Constraints as Assert;
class Author
{
 /**
 * @Assert\File(
 * maxSize = “1024k”,
 * mimeTypes = {“application/pdf”, “application/x-pdf”},
 * mimeTypesMessage = “Please upload a valid PDF”
 * )
 */
 protected $bioFile;
}

---

1) Set enable_annotations parameter as true in your app/config/config.yml:

# app/config/config.yml
framework:
    validation:      { enable_annotations: true }
2) Include properly the validation constraints on your entity file.

// YourEntity.php
use Symfony\Component\Validator\Constraints as Assert;
3) Use the annotation properly. Example:

// YourEntity.php
/**
 * @Assert\File(
 *      maxSize="5242880",
 *      mimeTypes = {
 *          "image/png",
 *          "image/jpeg",
 *          "image/jpg",
 *          "image/gif",
 *          "application/pdf",
 *          "application/x-pdf"
 *      }
 * )
 */
 private $arquivo;

---

#[Assert\AtLeastOneOf(
    constraints: [
        new Assert\File(extensions: ['pdf']),
        new Assert\Sequentially(
            [
                new Assert\File(extensions: ['jpg', 'jpeg','png','svg']),
                new Assert\Image(maxWidth: 160)
             ]
        ),
    ]
)]
public UploadedFile $file;

-----------------------------------------------------------------------

################################################
Next.js Generator
################################################

https://api-platform.com/docs/create-client/nextjs/
https://api-platform.com/docs/distribution/
https://github.com/teohhanhui/api-platform-docs/blob/master/client-generator/nextjs.md
https://www.npmjs.com/package/@api-platform/create-client
https://nextjs.org/

################################################
Enabling the Built-in HTTP Cache Invalidation System
################################################

https://api-platform.com/docs/core/controllers/
https://api-platform.com/docs/core/performance/
https://api-platform.com/docs/core/performance/#setting-custom-http-cache-headers
https://api-platform.com/docs/distribution/debugging/
https://api-platform.com/docs/extra/troubleshooting/
https://api-platform.com/docs/v2.6/core/performance/#setting-custom-http-cache-headers
https://symfony.com/doc/current/cache.html
https://symfony.com/doc/current/http_cache.html


https://docs.docker.com/build/building/multi-platform/
https://docs.docker.com/build/cache/
https://docs.docker.com/registry/spec/api/
https://github.com/api-platform/api-platform/issues/1738
https://github.com/api-platform/api-platform/issues/1816
https://github.com/api-platform/api-platform/issues/1895
https://github.com/api-platform/api-platform/issues/1895
https://github.com/api-platform/api-platform/issues/2207
https://github.com/api-platform/core/issues/2926
https://stackoverflow.com/questions/63576790/clear-cache-command-gets-an-error-error-after-installing-api-platform-com
https://stackoverflow.com/questions/63868226/react-and-docker-during-dev-see-changes-without-restart
https://stackoverflow.com/questions/75448864/after-updating-to-php-8-setting-custom-http-cache-headers-with-api-platform-is
https://symfonycasts.com/screencast/api-platform2-security/uncached-metadata

----------------

composer req api

----------------

# api/Dockerfile
FROM api_platform_php as api_platform_php_dev

ARG XDEBUG_VERSION=3.1.3
RUN set -eux; \
 apk add --no-cache --virtual .build-deps $PHPIZE_DEPS; \
 pecl install xdebug-$XDEBUG_VERSION; \
 docker-php-ext-enable xdebug; \
 apk del .build-deps

----------------

version: "3.4"
services:
  php:
    build:
      target: api_platform_php_dev
    environment:
      # See https://docs.docker.com/docker-for-mac/networking/#i-want-to-connect-from-a-container-to-a-service-on-the-host
      # See https://github.com/docker/for-linux/issues/264
      # The `remote_host` below may optionally be replaced with `remote_connect_back`
      # XDEBUG_MODE required for step debugging
      XDEBUG_MODE: debug
      # default port for Xdebug 3 is 9003
      # idekey=VSCODE if you are debugging with VSCode
      XDEBUG_CONFIG: >-
        client_host=host.docker.internal
        idekey=PHPSTORM
      # This should correspond to the server declared in PHPStorm `Preferences | Languages & Frameworks | PHP | Servers`
      # Then PHPStorm will use the corresponding path mappings
      PHP_IDE_CONFIG: serverName=api-platform

----------------


version: "3.4"

services:
  php:
    build:
      context: ./api
      target: api_platform_php
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s

  pwa:
    build:
      context: ./pwa
      target: api_platform_pwa_dev
    environment:
      API_PLATFORM_CLIENT_GENERATOR_ENTRYPOINT: http://caddy

#  pwa:
#    build:
#      context: ./pwa
#      target: api_platform_pwa_dev
#    volumes:
#      - ./pwa:/usr/src/pwa:rw,cached
##     - ./admin:/usr/src/admin:rw,cached
#    environment:
#      - WATCHPACK_POLLING=true

  caddy:
    build:
      context: api/
      target: api_platform_caddy
    depends_on:
      - php
      - pwa
    environment:
      PWA_UPSTREAM: pwa:3000
      SERVER_NAME: ${SERVER_NAME:-localhost, caddy:80}
      MERCURE_PUBLISHER_JWT_KEY: ${MERCURE_PUBLISHER_JWT_KEY:-xxxx}
      MERCURE_SUBSCRIBER_JWT_KEY: ${MERCURE_SUBSCRIBER_JWT_KEY:-xxxx}
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
      - caddy_data:/data
      - caddy_config:/config
    ports:
      - target: 80
        published: 80
        protocol: tcp
      - target: 443
        published: 443
        protocol: tcp
      - target: 443
        published: 443
        protocol: udp

volumes:
  php_socket:
  caddy_data:
  caddy_config:


################################################################
denyAccessUnlessGranted symfony
################################################################

https://doc.hotexamples.com/de/class/symfony.bundle.frameworkbundle.controller/Controller
https://github.com/symfony/symfony/issues/35755
https://github.com/symfony/symfony/issues/45774
https://sajadtorkamani.com/symfony-voters-reference/
https://stackoverflow.com/questions/34748252/denyaccessunlessgranted-in-controller-multiple-roles
https://symfony.com/doc/current/security/voters.html
https://symfonycasts.com/screencast/symfony-security/deny-access-controller

// src/Controller/PostController.php
// inside your controller action
if ($post->getOwner() !== $this->getUser()) {
    throw $this->createAccessDeniedException();
}

$this->denyAccessUnlessGranted(['ROLE_EDIT', 'ROLE_ADMIN'], $item, 'You cannot edit this item.');

protected function denyAccessUnlessGranted($attributes, $object = null, $message = 'Access Denied.')
{
    if (!$this->isGranted($attributes, $object)) {
        throw $this->createAccessDeniedException($message);
    }
}

if(!$this->isGranted('ROLE_EDIT', $item) && !$this->isGranted('ROLE_OTHER', $item)){
    throw $this->createAccessDeniedException('not allowed');
}


################################################################
api platform 405 Method not allowed
################################################################

https://github.com/api-platform/core/issues/854
https://restful-api-design.readthedocs.io/en/latest/methods.html
https://api-platform.com/docs/core/operations/#enabling-and-disabling-operations
https://github.com/api-platform/api-platform/issues/768
https://api-platform.com/docs/core/operations/
https://stackoverflow.com/questions/48290013/post-405-method-not-allowed-api-symfony-angular
https://symfony.com/doc/6.2/the-fast-track/en/26-api.html

405 Method Not Allowed
The request method is known by the server but has been disabled and cannot be used

Method	Scope		Semantics
GET	collection	Retrieve all resources in a collection
GET	resource	Retrieve a single resource
HEAD	collection	Retrieve all resources in a collection (header only)
HEAD	resource	Retrieve a single resource (header only)
POST	collection	Create a new resource in a collection
PUT	resource	Update a resource
PATCH	resource	Update a resource
DELETE	resource	Delete a resource
OPTIONS	any		Return available HTTP methods and other options


class MainController extends Controller
{
    /**
     * @Route(
     *     path="/",
     *     methods={"POST"}
     * )
     */
    public function indexAction()
    {
        //...
    }
}


// https://symfonycasts.com/screencast/api-platform/operations
// https://api-platform.com/docs/core/operations/
// https://api-platform.com/docs/core/operations/#enabling-and-disabling-operations
// api/src/Entity/Place.php
namespace App\Entity;

use ApiPlatform\Metadata\Get;
use ApiPlatform\Metadata\Put;
use ApiPlatform\Metadata\Delete;
use ApiPlatform\Metadata\GetCollection;
use ApiPlatform\Metadata\Post;
use ApiPlatform\Metadata\ApiResource;
use App\Controller\GetWeather;
use Doctrine\ORM\Mapping as ORM;

#[ApiResource(
    operations: [
        new Get(),
        new Put(),
        new Delete(),
        new Get(name: 'weather', uriTemplate: '/places/{id}/weather', controller: GetWeather::class),
        new GetCollection(),
        new Post(),
    ]
)]
#[ORM\Entity]
class Place
{
    //...
}



############################################################
Symfony doctrine
############################################################
https://www.doctrine-project.org/projects/doctrine-orm/en/2.14/reference/query-builder.html
https://stackoverflow.com/questions/7900838/createquerybuilder-in-clause
https://mikro-orm.io/docs/query-builder
https://www.tabnine.com/code/javascript/functions/typeorm/EntityManager/createQueryBuilder
https://symfonycasts.com/screencast/doctrine-queries/query-builder
https://github.com/webmozart/doctrine-orm/blob/master/lib/Doctrine/ORM/QueryBuilder.php
https://orkhan.gitbook.io/typeorm/docs/select-query-builder
https://mikro-orm.github.io/docs/v2/query-builder/
https://docs.typo3.org/m/typo3/reference-coreapi/main/en-us/ApiOverview/Database/QueryBuilder/Index.html

$qb = $em->createQueryBuilder();
$qb->select('u')
   ->from('User', 'u')
   ->where('u.id = ?1')
   ->orderBy('u.name', 'ASC');



############################################################
############################################################
file_put_contents("debug.txt", json_encode($result, JSON_THROW_ON_ERROR), FILE_APPEND| LOCK_EX);
cd public/
tail debug.txt



############################################################
Convert PDF to image with high resolution
############################################################

https://stackoverflow.com/questions/6605006/convert-pdf-to-image-with-high-resolution
https://www.serverlab.ca/tutorials/linux/administration-linux/how-to-install-imagemagick-for-php-on-ubuntu-18-04/
https://itsfoss.com/install-imagemagick-ubuntu/
https://wiki.ubuntuusers.de/ImageMagick/
https://linuxopsys.com/topics/install-imagick-on-ubuntu
https://linuxhint.com/install-the-latest-imagemagick-on-ubuntu/
https://www.simplified.guide/imagemagick/install-imagemagick-for-php-on-ubuntu

sudo apt update
sudo apt install build-essential make git
sudo apt install imagemagick -y
sudo apt list imagemagick -a
sudo apt install php-imagick
sudo apt install --assume-yes php-imagick
sudo systemctl restart apache2
php -m | grep imagick
php -r 'phpinfo();' | grep imagick


convert -version
convert -density 150 in.jpeg -quality 100 out.pdf

convert -density 300 -trim test.pdf -quality 100 test.jpg
convert -density 600 test.pdf -background white -flatten -resize 25% test.png
convert -geometry 1600x1600 -density 200x200 -quality 100 test.pdf test_image.jpg
convert -density 300 -trim struct2vec.pdf -quality 100 struct2vec.png
convert -verbose -density 150 "input.pdf" -quality 100 -sharpen 0x1.0 output.jpg

convert           \
   -verbose       \
   -density 150   \
   -trim          \
    test.pdf      \
   -quality 100   \
   -flatten       \
   -sharpen 0x1.0 \
    24-18.jpg


############################################################
api-platform
############################################################

https://api-platform.com/docs/core/performance/
https://api-platform.com/docs/core/file-upload/
https://api-platform.com/docs/core/operations/
https://api-platform.com/docs/distribution/
https://api-platform.com/docs/core/controllers/
https://api-platform.com/docs/core/serialization/
https://api-platform.com/docs/core/subresources/
https://api-platform.com/docs/core/configuration/
https://api-platform.com/docs/core/state-processors/
https://api-platform.com/docs/distribution/debugging/

https://github.com/api-platform/api-platform/issues/913
https://github.com/api-platform/api-platform/issues/1898
https://github.com/api-platform/api-platform/issues/1155
https://github.com/api-platform/api-platform/issues/1606

https://symfony.com/doc/current/configuration/override_dir_structure.html
https://symfonycasts.com/screencast/api-platform-extending/persister-decoration
https://symfonycasts.com/screencast/api-platform-extending/decoration-deep-dive

https://www.doctrine-project.org/projects/doctrine-orm/en/2.14/reference/query-builder.html


FROM php:7.2-fpm

ARG APP_NAME
ENV APP_ENV='prod'

COPY . /var/www/html/$APP_NAME/

RUN apt-get update
RUN apt-get -y install zlib1g-dev unzip libpq-dev git-core libmcrypt-dev vim libfcgi0ldbl \
libfreetype6-dev libjpeg62-turbo-dev libpng-dev

#INSTALL APCu
RUN pecl install apcu
RUN echo "extension=apcu.so" > /usr/local/etc/php/conf.d/apcu.ini

RUN docker-php-ext-install pdo pdo_pgsql pgsql mbstring opcache -j$(nproc) gd
RUN docker-php-ext-configure opcache --enable-opcache
RUN docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/

RUN echo "memory_limit = 1024M" > /usr/local/etc/php/conf.d/memory_limit.ini
WORKDIR /var/www/html/$APP_NAME/
RUN curl -sS https://getcomposer.org/installer | php
RUN php composer.phar global require hirak/prestissimo
RUN php composer.phar install --no-ansi --no-dev --no-interaction --no-progress --no-scripts --optimize-autoloader
RUN php bin/console assets:install public --no-interaction --no-ansi && php bin/console cache:warmup --no-interaction --no-ansi --env=prod --no-debug

php bin/console cache:clear
chmod -R -w var/cache
$ symfony serve


docker-compose pull
docker-compose build --no-cache
docker-compose down -d
docker-compose up



########################################################
api-platform
########################################################
https://github.com/api-platform/api-platform/issues/1668
https://symfonycasts.com/screencast/api-platform2-security/test-reset-database
https://stackoverflow.com/questions/64307812/api-platform-php-docker-container-keeps-stopping-randomly-and-wont-restart-pro
https://api-platform.com/docs/distribution/
https://api-platform.com/docs/core/performance/

version: '3.4'

services:
  php:
    image: "${PHP_IMAGE}"
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    depends_on:
      - db
      - dev-tls
    volumes:
      - ./api:/srv/api:rw,cached
      - ./api/docker/php/conf.d/api-platform.dev.ini:/usr/local/etc/php/conf.d/api-platform.ini
      # if you develop on Linux, you may use a bind-mounted host directory instead
      # - ./api/var:/srv/api/var:rw
      - dev-certs:/certs:ro,nocopy
    environment:
      - 'COMPOSER_AUTH={"github-oauth":{"github.com":"${GITHUB_COMPOSER_TOKEN}"},"gitlab-token":{"gitlab.com":"${GITLAB_COMPOSER_TOKEN}"}}'

  api:
    image: "${NGINX_IMAGE}"
    depends_on:
      - php
    volumes:
      - ./api/public:/srv/api/public:ro

  vulcain:
    image: dunglas/vulcain
    environment:
      - CERT_FILE=/certs/localhost.crt
      - KEY_FILE=/certs/localhost.key
      - UPSTREAM=http://api
    depends_on:
      - api
      - dev-tls
    volumes:
      - dev-certs:/certs:ro,nocopy
    ports:
      - target: 443
        published: 8443
        protocol: tcp

  db:
    image: mariadb:10.1
    command:
      - 'mysqld'
      - '--character-set-server=utf8mb4'
      - '--collation-server=utf8mb4_unicode_ci'
    environment:
      - 'MYSQL_DATABASE=${GOODCRM_DB_DATABASE}'
      - 'MYSQL_USER=${GOODCRM_DB_USER}'
      - 'MYSQL_PASSWORD=${GOODCRM_DB_PASSWORD}'
      - 'MYSQL_RANDOM_ROOT_PASSWORD=yes'
    volumes:
      # Pre-load the d/b
      - ./api/data:/docker-entrypoint-initdb.d
    ports:
      - target: 3306
        published: 13306
        protocol: tcp

  mercure:
    image: dunglas/mercure
    environment:
      - ALLOW_ANONYMOUS=1
      - CERT_FILE=/certs/localhost.crt
      - CORS_ALLOWED_ORIGINS=*
      - DEMO=1
      - JWT_KEY=!ChangeMe!
      - KEY_FILE=/certs/localhost.key
      - PUBLISH_ALLOWED_ORIGINS=https://localhost:1337 # required for publishing from the demo page
    depends_on:
      - dev-tls
    volumes:
      - dev-certs:/certs:ro,nocopy
    ports:
      - target: 443
        published: 1337
        protocol: tcp

  client:
    image: "${CLIENT_IMAGE}"
    tty: true # https://github.com/facebook/create-react-app/issues/8688
    environment:
      - API_PLATFORM_CLIENT_GENERATOR_ENTRYPOINT=http://api
      - API_PLATFORM_CLIENT_GENERATOR_OUTPUT=src
    depends_on:
      - dev-tls
    volumes:
      - ./client:/usr/src/client:rw,cached
      - dev-certs:/usr/src/client/node_modules/webpack-dev-server/ssl:rw,nocopy
    ports:
      - target: 3000
        published: 443
        protocol: tcp

  admin:
    image: "${ADMIN_IMAGE}"
    tty: true # https://github.com/facebook/create-react-app/issues/8688
    depends_on:
      - dev-tls
    volumes:
      - ./admin:/usr/src/admin:rw,cached
      - dev-certs:/usr/src/admin/node_modules/webpack-dev-server/ssl:rw,nocopy
    ports:
      - target: 3000
        published: 444
        protocol: tcp

  dev-tls:
    image: "${DEV_TLS_IMAGE}"
    volumes:
      - dev-certs:/certs:rw
    ports:
      - target: 80
        published: 80
        protocol: tcp

volumes:
  dev-certs: {}




############################################################
NGINX
############################################################

https://www.youtube.com/watch?v=a41jxGP9Ic8
https://www.youtube.com/watch?v=9f4LUALgyAU&t=108s
https://www.youtube.com/watch?v=lZVAI3PqgHc&t=681s
https://www.youtube.com/watch?v=C5kMgshNc6g&t=561s
https://www.youtube.com/watch?v=aeLE988jmlo
https://www.youtube.com/watch?v=Xo-m8yQGxg0
https://www.youtube.com/watch?v=3zX8eZ9ss_w
https://www.youtube.com/watch?v=QhUSSxvvwjE
https://www.youtube.com/watch?v=9XvO1220yWo
https://www.youtube.com/watch?v=9uzjxISp8B8
https://www.youtube.com/watch?v=QohQieveWkk&list=PLGz_X9w9raXf748bzuGOV6XJv7q3wLxhZ

http://nginx.org/en/docs/switches.html
https://www.keycdn.com/support/nginx-commands

nginx -v
nginx -t
nginx -T
nginx -s reload
service --status-all



#######################################################
ext-zip' is missing in composer.json
#######################################################

https://www.compulsivecoders.com/tech/how-to-install-php-ext-zip-extension/
https://stackoverflow.com/questions/56219962/composer-require-ext-zip-fails

php --version
sudo apt-get install php-zip

{
    "require" : {
        "ext-zip": "*"
    }
}

If your code runs OK - you've already got the zip extension installed on your machine.
PHPStorm adds this suggestion to ensure that anywhere else that the project is deployed
also has the right extensions too.

Manually adding the line in your composer.json file (require block) "ext-zip": "*",
 (and others that it can suggest, such as ext-apc, ext-redis and ext-json, as well
 as any others that you might be using) will make sure that when you deploy it
 composer can also check that the appropriate extra items are installed.

It's only a warning though, and you could ignore it - or you can allow composer
 to make sure that your servers are setup as they would be needed to run your code,
 and do things with zip-files. If your server doesn't have ext-zip installed,
 composer install would complain, and stop - saving issues later when you discover
 that code fails without the zip extension, et al.



#######################################################
debug  createQueryBuilder query Doctrine - rint out the real sql
#######################################################

https://stackoverflow.com/questions/2095394/doctrine-how-to-print-out-the-real-sql-not-just-the-prepared-statement
https://gist.github.com/JohnD-EE/4d6c6ff4a8364269ed19
https://symfonycasts.com/screencast/doctrine-queries/raw-sql-queries
https://symfonycasts.com/screencast/doctrine-queries/query-builder
https://www.doctrine-project.org/projects/doctrine-dbal/en/current/reference/query-builder.html
https://symfony.com/doc/current/doctrine.html
https://orkhan.gitbook.io/typeorm/docs/select-query-builder
https://www.doctrine-project.org/projects/doctrine-orm/en/2.14/reference/query-builder.html
https://stackoverflow.com/questions/7576029/doctrine-dql-dynamic-order-by-parameter
https://github.com/rectorphp/rector/issues/2280

$qb = $this->createQueryBuilder('a');
$query=$qb->getQuery();
// SHOW SQL:  $query->getSql()
echo $query->getSQL();
// Show Parameters:
echo $query->getParameters();


$qb = $this->createQueryBuilder('a');
$query = $qb->getQuery();
print "<pre>";
        print_r(array(
            'dql' => $query->getDQL(),
            'parameters' => $query->getParameters(),
            'sql' => $query->getSQL()
        ));
print "</pre>";


#######################################################
DateTime
#######################################################

https://github.com/api-platform/api-platform/issues/506
https://stackoverflow.com/questions/69632445/could-not-convert-php-value-to-type-date-expected-one-of-the-following-types-n
https://github.com/api-platform/api-platform/issues/2191
https://api-platform.com/docs/core/filters/
https://www.sitepoint.com/php-get-current-date/
https://www.php.net/manual/en/datetime.format.php
https://www.sitepoint.com/php-get-current-date/
https://stackoverflow.com/questions/9904080/how-to-get-time-and-date-from-datetime-stamp-in-php
https://www.php.net/manual/en/class.datetime.php
https://www.doctrine-project.org/projects/doctrine-orm/en/2.14/reference/query-builder.html
https://github.com/doctrine/dbal/issues/3740


$currentDate = date('Y-m-d');
echo $currentDate;

$currentDate = date('l, F j, Y');
echo $currentDate;

$timestamp = time();
$currentDate = gmdate('Y-m-d', $timestamp);
echo $currentDate;

$currentDateTime = new DateTime('now', new DateTimeZone('UTC'));
$currentDateTime = new DateTime('now');
$currentDateTime->setTimezone(new DateTimeZone('UTC'));


$currentYear = date("Y");
$dateTo = new DateTime();
$dateTo->setDate($currentYear, 12, 31);
print_r($dateTo->format('Y-m-d'));


$s = '8/29/2011 11:16:12 AM';
$dt = new DateTime($s);
$date = $dt->format('m/d/Y');
$time = $dt->format('H:i:s');
echo $date, ' | ', $time;


use Doctrine\DBAL\Types\Type;
$query->setParameter($a, Types::BOOLEAN);
$query->setParameter($b, Types::DATE_MUTABLE);

$connection->createQueryBuilder()
    ->insert('contacts')
    ->values(
        [
            'name' => '?',
            'birthday' => '?',
        ]
    )
    ->setParameter(0, (string)$name)
    ->setParameter(1, $birthday, Types::DATE_MUTABLE)
    ->execute();






