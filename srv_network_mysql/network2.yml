version: "3"


# ok

# docker network ls
# docker run -itd --name=networktest ubuntu
# docker network inspect bridge
# docker network disconnect bridge networktest
# docker network create -d bridge my_bridge
# docker network ls
# docker run -d --net=my_bridge --name db training/postgres
# docker inspect --format='{{json .NetworkSettings.Networks}}'  db
# docker run -d --name web training/webapp python app.py
# docker inspect --format='{{json .NetworkSettings.Networks}}'  web
# docker inspect --format='{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' web
# docker container exec -it db bash
# docker container exec -it db bash
# https://docs.docker.com/engine/tutorials/networkingcontainers/

#services:
#  db:
#    container_name: mariadb
#    image: mariadb:10.4
#    restart: always
#    environment:
#      MYSQL_ROOT_PASSWORD: password
#      MYSQL_DATABASE: mydb
#    ports:
#      - 3306:3306

# https://byteschool.io/post/container-networks-with-docker-compose/
# docker pull mariadb:10.4.7
# sudo rm *.php

# /usr/bin/docker-compose -f /home/demos/Git/docktest/server6/server-network2.yml up -d
# /usr/bin/docker-compose -f /home/demos/Git/docktest/server6/server-network2.yml -p server6 stop wordpress db

# http://localhost:9000/wp-admin/install.php  wordpress


# wordpress
services:
  db:
    container_name: mariadb
    image: mariadb:10.4 # mariadb:10.4.7
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: mydb
    ports:
      - "3306:3306"
    networks:
      - wpsite
  wordpress:
    depends_on:
      - db
    container_name: wp
    image: wordpress:php7.2
    ports:
      - "9000:80"
    expose:
      - 9000
    restart: always
    volumes: ["./wp:/var/www/html"]
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_NAME: mydb
      WORDPRESS_DB_PASSWORD: password
    networks:
      - wpsite
networks:
  wpsite: